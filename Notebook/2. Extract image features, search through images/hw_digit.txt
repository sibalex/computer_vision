Распознавание рукописного ввода на примере базы MNIST

Построить классификатор изображений рукописного ввода на базе MNIST. 
В качестве шаблона в данной работе можно использовать ipython-ноутбук 002-digit.ipynb 
(https://github.com/a4tunado/lectures/blob/master/002/002-digit.ipynb).

Классификатор предлагается строить на признаках, полученных в результате предобработки изображений, 
например, гистограммы градиентов (HOG) или результат PCA преобразования.

В качестве модели классификатора можно использовать любую известную Вам модель, 
за исключением сверточных нейронных сетей.

Критерием качества классификатора является метрика accuracy. Для получения зачета по данной работе, 
значение метрики accuracy должно быть больше 0.6. 
Метрика оценивается на тестовой выборке в рамках контеста Digit Recognizer на Kaggle 
(https://www.kaggle.com/c/digit-recognizer).

Решение необходимо предоставить в виде ipython-ноутбука с реализацией процесса 
построения модели и скриншота с финальным результатом на Kaggle.



!(объект класса PCA задавайте с гиперпараметром “whiten=True”, иначе score будет никакущий (решейпить матрицу точек на 28*28 не обязательно). pca = PCA(n_components = n_components, whiten=True))